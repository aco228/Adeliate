@model Adeliate.Portal.Models.Dashboard.DashboardModel

<div class="row">
  <div class="col-md-12">
    <div class="card">
      <div class="card-block">
        <div class="row">
          <div class="col-5">
            <h4 class="card-title">Traffic</h4>
            <div class="small text-muted" style="margin-top:-10px;">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(DateTime.Now.Month) @DateTime.Now.Year</div>
          </div>
          <div class="col-7">
            <div class="btn-toolbar float-right" role="toolbar" aria-label="Toolbar with button groups">
              <div class="btn-group mr-1" data-toggle="buttons" aria-label="First group">
                <label class="btn btn-outline-secondary">
                  <input type="radio" name="options" id="option1">Day
                </label>
                <label class="btn btn-outline-secondary active">
                  <input type="radio" name="options" id="option2" checked="">Month
                </label>
                <label class="btn btn-outline-secondary">
                  <input type="radio" name="options" id="option3">Year
                </label>
              </div>
            </div>
          </div>
        </div>
        <div class="chart-wrapper" style="height:298px;margin-top:40px;">
          <canvas id="main-chart" height="298"></canvas>
        </div>
      </div>


    </div>
    <!--/.card-->
  </div>
</div>

<script>

  $(document).ready(function () {
    var elements = 27;
    var data1 = [];
    var data2 = [];
    var data3 = [];

    for (var i = 0; i <= elements; i++) {
      data1.push(random(50, 200));
      data2.push(random(80, 100));
      data3.push(65);
    }

    var data = {
      labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S', 'M', 'T', 'W', 'T', 'F', 'S', 'S', 'M', 'T', 'W', 'T', 'F', 'S', 'S', 'M', 'T', 'W', 'T', 'F', 'S', 'S'],
      datasets: [
        {
          label: 'My First dataset',
          backgroundColor: convertHex($.brandInfo, 10),
          borderColor: $.brandInfo,
          pointHoverBackgroundColor: '#fff',
          borderWidth: 2,
          data: data1
        },
        {
          label: 'My Second dataset',
          backgroundColor: 'transparent',
          borderColor: $.brandSuccess,
          pointHoverBackgroundColor: '#fff',
          borderWidth: 2,
          data: data2
        },
        {
          label: 'My Third dataset',
          backgroundColor: 'transparent',
          borderColor: $.brandDanger,
          pointHoverBackgroundColor: '#fff',
          borderWidth: 1,
          borderDash: [8, 5],
          data: data3
        }
      ]
    };

    var options = {
      responsive: true,
      maintainAspectRatio: false,
      legend: {
        display: false
      },
      scales: {
        xAxes: [{
          gridLines: {
            drawOnChartArea: false,
          }
        }],
        yAxes: [{
          ticks: {
            beginAtZero: true,
            maxTicksLimit: 5,
            stepSize: Math.ceil(250 / 5),
            max: 250
          }
        }]
      },
      elements: {
        point: {
          radius: 0,
          hitRadius: 10,
          hoverRadius: 4,
          hoverBorderWidth: 3,
        }
      },
    };
    var ctx = $('#main-chart');
    var mainChart = new Chart(ctx, {
      type: 'line',
      data: data,
      options: options
    });
  });


  //Random Numbers
  function random(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
  }


  //convert Hex to RGBA
  function convertHex(hex, opacity) {
    hex = hex.replace('#', '');
    r = parseInt(hex.substring(0, 2), 16);
    g = parseInt(hex.substring(2, 4), 16);
    b = parseInt(hex.substring(4, 6), 16);

    result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';
    return result;
  }


</script>